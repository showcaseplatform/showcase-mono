const englishTranslations = {
  submitButton: 'Submit',
  followButton: 'Follow',
  unfollowButton: 'Following',
  paymentMethodHeader: 'Your Payment Method',
  paymentMethodUpdateHeader: 'Update Payment Method',
  profileAccountPaymentMethod: 'Payment Method',
  followersHeader: 'Followers',
  followingHeader: 'Following',
  publishHeader: 'Badge Details',
  creatorHeader: 'Create your Badge',
  showcaseHeader: 'Your Showcase',
  showcaseHeaderOtherUser: 'View Showcase',
  marketplaceHeader: 'Marketplace',
  categoryArt: 'Art',
  categoryMusic: 'Music',
  categoryCharity: 'Causes',
  categoryPodcast: 'Podcasts',
  categoryAnimals: 'Animals',
  categoryGaming: 'Gaming',
  categoryVlogs: 'Vlogs',
  categorySports: 'Sports',
  categoryStyle: 'Style',
  categoryTravel: 'Travel',
  categoryCulinary: 'Culinary',
  categoryTechnology: 'Technology',
  myFeed: 'Feed',
  myShowcase: 'Showcase',
  myEarn: 'Earn',
  mySocial: 'Chat',
  myCreator: 'Create',
  myTrade: 'Trade',
  purchaseButton: 'BUY',
  searchShowcase: 'Search Showcase',
  myNotifications: 'Notifications',
  notificationsHeader: 'Notifications',
  profileEditButton: 'Edit Profile',
  profileOptionsTerms: 'Terms of Use',
  profileOptionsSupport: 'Support',
  profileAccountBalance: 'Account Balance',
  profileOptionsHeader: 'Options',
  profileOptionsEdit: 'Edit Profile',
  profileOptionsAbout: 'About',
  profileOptionsLogout: 'Log Out',
  profileOptionsEditSave: 'Save',
  profileEditPhoto: 'Profile Photo',
  profileEditUsername: 'Username',
  profileEditEmail: 'Email',
  profileEditPassword: 'Password',
  profileEditDisplayname: 'Display Name',
  profileEditUsernameText: 'Username is your unique identity on Showcase.',
  termsHeader: 'Terms of Use',
  privacyHeader: 'Privacy Policy',
  termsOfUse:
    'put terms here. put terms here. put terms here. put terms here. put terms here. put terms here. put terms here. put terms here. put terms here. put terms here. put terms here.',
  privacyPolicy:
    'put privacy policy here. put privacy policy here. put privacy policy here. put privacy policy here. put privacy policy here. put privacy policy here.',
  profileOptionsPrivacyPolicy: 'Privacy Policy',
  balanceHeader: 'Wallet',
  profileEditBio: 'No bio yet!',
  balanceCurrencyLabel: 'Choose Currency...',
  yourBalance: 'Your Balance',
  balanceWithdraw: 'Withdraw',
  cameraRollPermissions:
    'Please enable Camera Roll Permissions to create a badge!',
  proportionalImage: 'Please upload a square image to create a badge!',
  largerImage: 'Please upload a minimum 500x500 pixel image to create a badge!',
  smallerImage:
    'Please upload a maximum 1000x1000 pixel image to create a badge!',
  badgeDetails: 'Badge details',
  badgeDetailsTitle: 'Title',
  badgeDetailsDescription: 'Description (optional)',
  badgeDetailsQuantity: 'Quantity',
  badgeDetailsPrice: 'Price',
  badgeDetailsFree: 'Give it away for free',
  createCategoryHeader: 'What kind of badge?',
  createBadgeButton: 'Create',

  badgeDetailsTitleInfo: 'Describe your badge in a few words',
  badgeDetailsPriceInfo: 'Set a fair price, usually between $10 and $50',
  badgeDetailsQuantityInfo:
    'Enter the total quantity of badges to be created, usually 5% to 20% of your followers count on social media',
  badgeDetailsDescriptionInfo: 'Describe your badge, in detail',

  searchFriends: 'Find Friends',
  creatorHeaderNext: 'Next',
  colorToolBrightness: 'Brightness',
  colorToolGreyscale: 'Greyscale',
  colorToolContrast: 'Contrast',
  colorToolHue: 'Hue',
  colorToolBlackAndWhite: 'Black and White',
  colorToolSaturate: 'Saturate',
  colorToolDesaturate: 'Desaturate',
  colorToolNegative: 'Negative',
  colorToolSepia: 'Sepia',
  colorToolTechnicolor: 'Technicolor',
  colorToolPolaroid: 'Polaroid',
  colorToolKodachrome: 'Kodachrome',
  colorToolBGR: 'BGR',
  colorToolBrownie: 'Brownie',
  colorToolVintage: 'Vintage',
  colorToolNight: 'Night',
  colorToolPredator: 'Predator',
  colorToolTrippy: 'Trippy',
  phonePlaceholder: 'Phone Number',
  authenticationModalHeader: 'Sign In to Continue',
  authenticationModalSubHeader:
    'Enter your phone number to create a new account or log in to your existing account.',
  authenticationModalTermsDisclaimer: "By continuing, you agree to Showcase's ",
  authenticationModalTermsLink: 'Terms of Use',
  authenticationModalPrivacyDisclaimer:
    " and confirm that you have read Showcase's ",
  authenticationModalPrivacyLink: 'Privacy Policy',
  authenticationModalSMSDisclaimer:
    'You will receive an SMS to confirm your phone number. SMS fee may apply.',
  authenticationModalCodeHeader: 'Enter Your Code',
  authenticationModalCodeSubHeader:
    'To keep your account secure, enter the 6 digit code we sent to:',
  codePlaceholder: '6-digit code',
  sendingSMSError:
    'There was an error sending the SMS. Please check your phone number and try again.',
  checkingSMSError: 'Invalid code. Please try again.',
  welcomeHeader: 'Welcome',
  welcomeText: 'welcome text goes here',
  /*questionPreloadOne:"What was the make of your first car?",
  questionPreloadTwo:"What is your mothers maiden name?",
  questionPreloadThree:"What street did you grow up on?",
  questionPreloadFour:"What is the first and last name of your first romantic partner?",
  questionPreloadFive:"Which phone number do you remember most from your childhood?",
  questionPreloadSix:"What is the name of your favorite childhood pet?",
  questionPreloadSeven:"What is the name of your first school?",
  questionPreloadEight:"What was your dream job as a child?",
  questionPreloadNine:"What is your favorite type of desert?",
  questionPreloadTen:"What was your Highschool GPA?",
  questionPreloadEleven:"Where did you travel for the first time?",
  questionPreloadTwelve:"What was your favorite childhood computer game?",
  questionPreloadThirteen:"",
  questionPreloadFourteen:"",
  questionPreloadFifteen:"",
  questionPreloadSixteen:"",
  questionPreloadSeventeen:"",
  questionPreloadEighteen:"",
  questionPreloadNineteen:"",
  questionPreloadTwenty:"",*/
  backupWalletSubHeader: 'Back up your Showcase password securely.',
  backupWalletDescription:
    'We recommend writing down your password and storing it in several places. By continuing you agree that in the event your password is lost or stolen, Showcase takes no responsibility or liability and you will permanently lose access to your badges.',
  continueButton: 'Continue',
  createWalletPasswordHint: 'Reminder Hint (optional)',
  createWalletPasswordConfirm: 'Confirm your password',
  createWalletPassword: 'Enter your password',
  createWalletSubHeader:
    'Create a password to Secure your Showcase before buying badges.',
  createWalletHeader: 'Secure your Showcase',
  walletPasswordNotMatching: 'Your passwords do not match',
  invalidWalletPassword:
    'Invalid password. Please enter a valid password of at least 8 characters.',
  backupWalletShowPassword: 'Your password is: ',
  walletError: 'Unable to retrieve account',
  profileAccountWalletBackup: 'Data Backup',
  walletBackupHeader: 'Data Backup',
  backupWalletTerms:
    'This feature is for advanced technical experts only and is not recommended for beginners. Enter your password and press Continue to backup your BIP39 secret phrase corresponding to your account. You are entirely liable and responsible to secure and keep private your secret phrase after backup.',
  backupWalletPassword: 'Enter your Password',
  walletBackupHint: 'Your password hint is: ',
  walletBackupSubHeader: 'Back up your Showcase Badges',
  walletBackupBelow: 'Your BIP39 Secret Phrase is:',
  walletBackupInvalidPassword:
    'Invalid password. Please enter a valid password of at least 8 characters.',
  mnemonicError: 'Error retrieving backup',
  balanceLoadingError: 'Error loading balance',
  logoutConfirmHeader: 'Are you sure?',
  logoutConfirmText: 'Stay signed in to keep your profile active',
  logoutConfirmCancelButton: 'Cancel',
  logoutConfirmLogoutButton: 'Log Out',
  checkWalletHeader: 'Confirm your Password',
  checkWalletSubHeader: 'Enter your password to unlock your Showcase',
  walletCheckError: 'Unable to unlock account',
  walletCreateError: 'Unable to encrypt account',
  blinkerEditProfileTitle: 'Tap to Edit',
  blinkerEditProfileDescription: 'Complete your profile',
  enterYourBirthday: 'Enter your Birthday',
  hideBirthday: 'Select Birthdate',
  cancelEditConfirmHeader: 'Are you sure?',
  cancelEditConfirmText: 'You will lose any unsaved changes',
  cancelEditConfirmCancelButton: 'Cancel',
  cancelEditConfirmBackButton: 'Go Back',
  editProfileMissingDisplayname: 'Please add your Display Name',
  editProfileMissingBirthdate: 'Please add your Birthdate',
  editProfileMissingUsername: 'Please add your Username',
  editProfileError: 'Error updating profile',
  profileEditErrorNonMatching: 'Your old password was incorrect',
  profileEditErrorInvalid:
    'Invalid input. Please check the formatting is correct.',
  updatePasswordConfirm: 'Confirm your current password',
  profileConfirmPasswordButton: 'Confirm',
  verifiedCreator: 'Verified Creator',
  uploadError: 'Network Error Uploading Media',
  goToTrade: 'Or Trade your Badges',
  categoryHeaderSelling: 'For Sale',
  categoryHeaderSold: 'Sold',
  tradeHeader: 'Trade Badges',
  tradeChooseHeader: 'Choose Badge to Sell',
  tradeConfirmHeader: 'Sell Badge',
  sellBadgeButton: 'Sell Badge',
  badgeDetailsPriceInfoResale: 'Set a fair price for this badge. ',
  stopSaleButton: 'Cancel Sale',
  publishInvalidTitle: 'Invalid Title',
  publishInvalidPrice: 'Invalid Price',
  publishInvalidQuantity: 'Invalid Quantity',
  publishInvalidDescription: 'Invalid Description',
  errorPublishing: 'Error Publishing Metadata',
  marketplaceLoadError: 'Unable to Load Marketplace',
  marketplaceLoadTryAgain: 'Try Again',
  marketplaceLoadErrorCategory: 'No results found!',
  marketplacePurchaseSelfCreatedBadge: "You can't buy your own badge.",
  purchaseError: 'Unable to Purchase Badge',
  causeChooseHeader: 'Support a Cause',
  causeChooseSkip: 'Skip',
  selectCauseButton: 'Donate ',
  selectCauseButtonDisabled: 'Select a Cause',
  causeChooseInfo:
    'Select a cause from the list below and use the slider to choose a percentage of your revenue to donate.',
  invalidCause: 'Invalid Cause',
  invalidDonationAmount: 'Invalid Donation %',
  causeModalHeader: 'Make an Impact',
  causeInfoText:
    'of the revenue from this badge will be donated to the social impact cause above. Please feel free to view their website and learn more about how you can help.',
  purchaseErrorCurrencies: 'Currency Rates have changed. Please Try again.',
  free: 'Free',
  purchaseButtonFree: 'Claim',
  emptyFeed: 'No Badges yet.',
  reportedUser: 'Reported User.',
  addUserFriendRemoveButton: 'Unfollow',
  addUserFriendButton: 'Follow',
  profileCountFollowing: 'Following',
  profileCountFollowers: 'Followers',
  profileCountBadges: 'Badges',
  createdBy: 'Created by ',
  addCardHeader: 'Add Payment Card',
  addCardSubHeader: 'Add a payment card to buy badges',
  invalidCardNumber: 'Invalid Card Number',
  inputCardNumber: 'Card number',
  inputCVC: 'CVC',
  inputExpMonth: 'MM',
  inputExpYear: 'YY',
  inputName: 'Name of cardholder',
  inputAddressLineOne: 'Address',
  inputAddressLineTwo: 'Address (line two, optional)',
  inputAddressCity: 'City',
  inputAddressState: 'State/Region',
  inputCountry: 'Select a Country...',
  inputAddressZip: 'ZIP / Postal code',
  cardSuccess: 'Successfully updated payment card!',
  cardFieldEmpty: 'Please fill out all required fields.',
  cardError: 'Error adding payment card. Please check your input.',
  updateMethodWithdraw: 'Update your payment method',
  existingMethodWithdraw: 'Withdraw to your account:',
  withdrawMethodUSDName: 'Full Name',
  withdrawMethodUSDAccountNumber: 'Account Number',
  withdrawMethodUSDRoutingNumber: 'Routing Number',
  withdrawMethodUSDAddress: 'Address (First Line)',
  withdrawMethodUSDCity: 'City',
  withdrawMethodUSDPostalCode: 'ZIP / Postal Code',
  withdrawMethodEURName: 'Full Name',
  withdrawMethodEURBIC: 'BIC Code',
  withdrawMethodEURIban: 'IBAN',
  withdrawMethodGBPName: 'Full Name',
  withdrawMethodGBPSortCode: 'Sort Code',
  withdrawMethodGBPAccountNumber: 'Account Number',
  withdrawMethodUSDAccountType: 'Account Type',
  withdrawMethodUSDAccountTypeSavings: 'Savings',
  withdrawMethodUSDAccountTypeChecking: 'Checking',
  withdrawalMethodHeader: 'Add Withdrawal Method',
  payoutMethodError:
    'Error saving withdrawal method. Please check your account details.',
  existingMethodWithdrawTerms:
    'By withdrawing funds from Showcase you agree that the above account is yours, and all account information has been entered correctly. Showcase will not be held responsible for any unreceived payments. Minimum withdrawal amount is 20',
  withdrawalConfirmHeader: 'Confirm Withdrawal',
  minimumWithdrawalBalance: 'Minimum withdrawal amount: 20',
  maximumWithdrawalBalance: 'Maximum withdrawal amount: 500',
  maximumWithdrawalBalanceTwo:
    'Contact Showcase support to increase your maximum withdrawal limit.',
  withdrawalItemSent: 'Sent',
  withdrawalItemETA: 'Estimated arrival:',
  withdrawalItemTransactionId: 'Transaction ID:',
  recentWithdrawals: 'Recent Withdrawals',
  editCard: 'Edit',
  yourCard: 'Card Ending In:',
  noCard: 'You do not have a saved payment method.',
  addCard: 'Add Card',
  noResultsUsers: 'No Results Found.',
  noResultsShowcase: 'No Results Found.',
  messageUserButton: 'Message',
  errorSendingMessage: 'Error sending message',
  requiredProfileUpdate: 'Please update your profile info before messaging',
  unknownName: 'Unknown',
  unreadMessages: 'New Messages',
  viewProfile: 'View',
  itemAlreadyForSale: 'This Badge is already for sale!',
  errorGeneratingSignature: 'Error generating signature for sale',
  errorSendingSignature: 'Error sending signature for sale',
}

const russianTranslations = {}

export const translate: (language?: string) => { [key: string]: string } =
  () => {
    var language = ''
    if (language == 'ru' || language == 'ru_US' || language == 'ru_RU') {
      return russianTranslations
    } else {
      return englishTranslations
    }
  }

export function getCurrencySymbol(currency: 'USD' | 'EUR' | 'GBP') {
  try {
    if (currency == 'USD') {
      return '$'
    } else if (currency == 'EUR') {
      return '€'
    } else if (currency == 'GBP') {
      return '£'
    } else {
      return 'currency input error'
    }
  } catch (e) {
    console.log('CURRENCYTRANSLATE ERR', e)
  }
}
